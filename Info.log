1. 	Install the following libraries:
	+	https://www.tensorflow.org/install/pip
	+	https://keras.io/
	+	https://www.python.org/downloads/
	+	https://www.anaconda.com/products/individual
	+	https://www.anaconda.com/products/individual#Downloads
	+	https://www.anaconda.com/products/individual#Downloads
	+	https://www.anaconda.com/products/individual

2. 	Rounding the process of reading the note durations increas speed significantly
	(Althoug I need more rigorous testing to confirm this)

ERROR:
	+ 	"Errores" al momento de empzar al trabajar con las liberrias como:
	  	Cannot find reference 'keras' in '__init__.py | __init__.py'	

	+	"Muy dificil a la hora de probar varios sample"s ya que con cada una de las puebras el tamano varian 
		y no se puede hacer un entrenamiento con un tamano fijo.

	+	"Los samples creados eran muy monotonos" cortos y no se podia apreciar la musica.
	 	ademas de que no se podia decir con certeza si cada input generaba diferentes outputs.

	+	"Intente asignar tiempo a las notas" anets de generar mi sequencia, cambiando asi la manera ne que manejo los modelos
		dando entonces errores, la solucion generar normals y luego asignarles el tiempo.

	+	"Reading and processing" of notes duration is very slow and took nearly 2 hours to process 7 midi files
		Warning: After all the process we still need to train the model and that takes another 30 minutes


	+	"Using a bar or spinning / animation" to show the process of generating music takes too long and is not very useful. 
		
Info:
	+	Started with the idea of just generate sound
	+	Then i wanted to give each note a time, so i could generate a melody
	+	Used lstm to generate the duration of each note
	+	implemented silences
	+	implemented chords
	+	implemented sound modulation
	+	En un archivo MIDI, cada evento musical, como la pulsación de una tecla, 
		se representa como un mensaje MIDI que incluye información sobre la nota, la duración y la intensidad, entre otros detalles.
		Esto hace que los archivos MIDI sean una fuente rica de información para entrenar modelos de generación musical.
	+   Thats All Folks :D

	+	Combine Process for Notes and Durations:
		Pros:

		Simplicity: Combining the processes can simplify your code by handling both notes and durations in one go.
		 This can lead to a more straightforward and easier-to-maintain implementation.

		Consistency: Handling notes and durations together can ensure that the relationships between notes and their
		 respective durations are preserved consistently.
		 
		Cons:

		Complexity: If the combined process becomes too complex, it might be harder to debug and maintain, especially if you have intricate logic for both notes and durations.
		Performance Impact: Depending on the volume of MIDI data and the complexity of calculations, handling both notes and durations together might impact performance if the process becomes computationally intensive.
		Separate Processes for Notes and Durations:
		Pros:

		Modularity: Separating notes and durations into different processes can improve modularity. Each process can focus on its specific task, making the code more modular and easier to manage.
		Scalability: If your application grows, you can scale the processing of notes and durations independently based on your system's needs.
		Performance Optimization: You can optimize each process individually based on the specific requirements of notes and durations. For example, you might apply different algorithms or optimizations depending on the task.
		Cons:

		Complex Relationships: Managing the relationships between notes and their corresponding durations might become more challenging if handled separately. Ensuring consistency becomes crucial.
		Reference:
	+	https://www.flaticon.es/ [Here I got all the icons]








